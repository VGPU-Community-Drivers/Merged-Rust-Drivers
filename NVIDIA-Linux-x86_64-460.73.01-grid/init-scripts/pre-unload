#!/bin/sh
#
# NVIDIA GRID Pre-unload
#
# Copyright (c) 2018 NVIDIA Corporation
#
# This is a script that attempts to stop known processes that use nvidia
# kernel modules before attempting to unload kernel modules.
#

##############################################################################
# main script
##############################################################################

# Early return success if the linux environment is not KVM.
#KVM_SPECIFIC_CODE_START
IS_KVM=$(( 1 ))
if [ "$IS_KVM" = "0" ]; then
    exit 0
fi
#KVM_SPECIFIC_CODE_END

# make sure we execute in the script directory
cd $(dirname $0)

# defaults
path=""
uninstall=0

current_path=$(dirname $0)

. $current_path/common.sh

targets="systemd upstart sysv"

supported=0
target="unknown"
for tgt in $targets; do
    case "$tgt" in
        systemd)
            target="systemd service"
            checkSystemd $path
            [ "$systemd_supported" = "1" ] && { supported=1; break; }
            ;;
        upstart)
            target="Upstart service"
            checkUpstart $path
            [ "$upstart_supported" = "1" ] && { supported=1; break; }
            ;;
        sysv)
            target="SysV init script"
            checkSysV $path
            [ "$sysv_supported" = "1" ] && { supported=1; break; }
            ;;
        *)
            break
            ;;
    esac
done

[ "$supported" = "1" ] || nvgdError "No supported init system found"

# The last call to checkInstallPath that succeeded set the $potential_path
# for the supported system.
path=$potential_path

# Parameters:
# $1: Daemon name
# $2: Stop target for Daemon [One of "systemd", "upstart", "sysv"]
run_service_stop() {
    nv_daemon_name="$1"
    stop_target="$2"

    . $current_path/common.sh

    # Run through the stop steps now
    nv_printf "\n"
    nv_printf "Stop parameters:\n"
    nv_printf "  Path to remove $target from : $path\n"
    nv_printf "\n"
    case "$stop_target" in
        systemd)
            stopSystemdService $path
            ;;
        upstart)
            stopUpstartService $path
            ;;
        sysv)
            stopSysVScript $path
            ;;
        *)
            nvgdError "Unknown stop target '$stop_target'"
            ;;
    esac
}

# Parameters:
# $1: Daemon name
# $2: Start target for Daemon [One of "systemd", "upstart", "sysv"]
run_service_start() {
    nv_daemon_name="$1"
    start_target="$2"

    . $current_path/common.sh

    # Run through the start steps now
    nv_printf "\n"
    nv_printf "Start parameters:\n"
    nv_printf "  Path to start $target from : $path\n"
    nv_printf "\n"
    case "$start_target" in
        systemd)
            startSystemdService $path
            ;;
        upstart)
            startUpstartService $path
            ;;
        sysv)
            startSysVScript $path
            ;;
        *)
            nvgdError "Unknown start target '$start_target'"
            ;;
    esac
}

#KVM_SPECIFIC_CODE_START
IS_KVM=$(( 1 ))
if [ "$IS_KVM" = "1" ]; then
    active_vgpu_vm_count=`ps -e -o args= | grep -c '^vgpu$';`
    if [ "$active_vgpu_vm_count" != "0" ]; then
        exit 1
    fi

    nv_daemon_name="nvidia-vgpu-mgr"
    . $current_path/common.sh

    if isNvgdRunning; then
        run_service_stop nvidia-vgpu-mgr $tgt
        rmmod nvidia-vgpu-vfio > /dev/null 2>&1
        if [ "$?" = "0" ]; then
            rmmod nvidia > /dev/null 2>&1
            if [ "$?" != "0" ]; then
                modprobe nvidia-vgpu-vfio > /dev/null 2>&1
                run_service_start nvidia-vgpud $tgt
                run_service_start nvidia-vgpu-mgr $tgt
                exit 1
            fi
        else
            run_service_start nvidia-vgpu-mgr $tgt
            exit 1
        fi
    fi
fi
#KVM_SPECIFIC_CODE_END
